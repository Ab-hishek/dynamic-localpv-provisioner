---
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - test_vars.yml

  tasks:
    - block:

          ## Generating the testname for deployment
        - include_tasks: /e2e-tests/utils/fcm/create_testname.yml

          ## RECORD START-OF-TEST IN e2e RESULT CR
        - include_tasks: /e2e-tests/utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'SOT'

        - name: Obtain the Node name
          shell: kubectl get nodes --no-headers -o custom-columns=:.metadata.name | grep -v master
          args:
            executable: /bin/bash
          register: node_name

        - name: check if the unclaimed bd available in all nodes
          shell: >
            kubectl get bd -n {{ operator_ns }} -l kubernetes.io/hostname={{ item }} -o custom-columns=:.status.claimState --no-headers
          args:
            executable: /bin/bash
          register: bd_status
          until: "'Unclaimed' in bd_status.stdout"
          delay: 5
          retries: 6
          with_items:
              - "{{ node_name.stdout_lines }}"

          ## Creating namespaces and making the application for deployment
        - include_tasks: /e2e-tests/utils/k8s/pre_create_app_deploy.yml
          vars:
            application_deployment: "{{ application_statefulset }}"

        - name: Replace the volume capcity placeholder with provider
          replace:
            path: "{{ application_statefulset }}"
            regexp: "teststorage"
            replace: "{{ lookup('env','PV_CAPACITY') }}"

          ## Deploying the application
        - include_tasks: /e2e-tests/utils/k8s/deploy_single_app.yml
          vars:
            application_deployment: "{{ application_statefulset }}"
            check_app_pod: 'no'
            delay: 10
            retries: 20

        - name: Deprovisioning the Application
          include_tasks: /e2e-tests/utils/k8s/deprovision_statefulset.yml
          vars:
            app_deployer: "{{ application_statefulset }}"

          ## Creating namespaces and making the application for deployment
        - include_tasks: /e2e-tests/utils/k8s/pre_create_app_deploy.yml
          vars:
            application_deployment: "{{ application_statefulset }}"

        - name: Replace the volume capcity placeholder with provider
          replace:
            path: "{{ application_statefulset }}"
            regexp: "teststorage"
            replace: "{{ lookup('env','PV_CAPACITY') }}"

          ## Deploying the application
        - include_tasks: /e2e-tests/utils/k8s/deploy_single_app.yml
          vars:
            application_deployment: "{{ application_statefulset }}"
            check_app_pod: 'no'
            delay: 10
            retries: 20          

        - set_fact:
            flag: "Pass"

      rescue:
        - name: Setting fail flag
          set_fact:
            flag: "Fail"

      always:
        ## RECORD END-OF-TEST IN e2e RESULT CR
        - include_tasks: /e2e-tests/utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'EOT'
